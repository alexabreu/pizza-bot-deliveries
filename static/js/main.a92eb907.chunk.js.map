{"version":3,"sources":["components/Map/styles/Grid.module.scss","components/Map/styles/Marker.module.scss","components/Map/styles/Map.module.scss","components/Form/styles/Form.module.scss","components/Map/Grid.tsx","components/Map/Marker.tsx","utils/point.ts","utils/map.ts","components/Map/index.tsx","components/Form/index.tsx","constants/index.ts","utils/directions.ts","utils/deliveries.ts","App.tsx","index.tsx"],"names":["module","exports","grid","row","column","marker","pizza","map","form","Grid","props","react_default","a","createElement","className","Styles","size","cellSize","concat","rows","i","columns","j","push","key","style","width","height","renderGridLines","Marker","position","type","Object","objectSpread","getIcon","Point","x","arguments","length","undefined","y","classCallCheck","this","_x","_y","parseFloat","createClass","get","set","value","getMarkerPosition","mapSize","p","top","left","moveBot","direction","botLocation","Map","deliveries","Map_Grid","d","hasBeenDelivered","Map_Marker","location","Form","memoizedHandleSubmit","useCallback","e","preventDefault","onSubmit","target","elements","order","handleSubmit","id","name","required","pattern","placeholder","title","INITIAL_DELIVERIES_STATE","BOT_STARTING_LOCATION","BOT_SPEED","DEFAULT_MAP_SIZE","getCardinalDirections","p1","p2","xDirection","yDirection","directions","distance","deltaX","deltaY","getXYDistance","Math","abs","removeWhiteSpaceFromOrder","replace","getMapSize","match","split","parseInt","getDeliveries","getDeliveryInstructions","toConsumableArray","instructions","App","_this","possibleConstructorReturn","getPrototypeOf","call","pizzaDeliveryInterval","state","deliveryInstructions","reset","setState","window","clearInterval","deliverPizza","_this$state","deliveryInstructionsArray","shift","currentDeliveryIndex","findIndex","join","handleOrder","setInterval","_this$state2","shouldShowForm","components_Form","components_Map","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a92eb907.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__3C6Ov\",\"row\":\"Grid_row__16T8N\",\"column\":\"Grid_column__10NbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marker\":\"Marker_marker__2B7A2\",\"pizza\":\"Marker_pizza__1hZ8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Map_map__7o_Z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1BDhd\"};","import React, { FunctionComponent } from 'react';\n\nimport Styles from './styles/Grid.module.scss';\n\nexport interface GridProps {\n  size: number;\n}\n\nconst renderGridLines = (props: GridProps) => {\n  const { size } = props;\n  const cellSize = `${100 / size}%`;\n  const rows = [];\n  for (let i = 0; i < size; i++) {\n    const columns = [];\n    for (let j = 0; j < size; j++) {\n      columns.push(<div key={`column-${j}`} className={Styles.column} style={{ width: cellSize }}></div>)\n    }\n    rows.push(<div key={`row-${i}`} className={Styles.row} style={{ height: cellSize }}>{columns}</div>);\n  }\n\n  return rows;\n}\n\nconst Grid: FunctionComponent<GridProps> = (props) => {\n  return (\n    <section className={Styles.grid}>\n      {renderGridLines(props)}\n    </section>\n  );\n}\n\nexport default Grid;\n","import React, { FunctionComponent } from 'react';\n\nimport Styles from './styles/Marker.module.scss';\n\nexport interface MarkerProps {\n  position: {\n    left: string, // % value\n    top: string, // % value\n  }\n  type: MarkerType;\n}\n\nconst getIcon = (type: MarkerType) => {\n  switch(type) {\n    case 'house':\n      return 'üè†';\n    case 'pizza':\n      return 'üçï';\n    case 'bot':\n      return 'ü§ñ';\n  }\n}\n\nconst Marker: FunctionComponent<MarkerProps> = (props) => {\n  const { position, type } = props;\n\n  return (\n    <div className={`${Styles.marker} ${Styles[type]}`} style={{...position}}>\n      {getIcon(type)}\n    </div>\n  )\n}\n\nexport default Marker;\n","export class Point implements PointInterface {\n  private _x: number;\n  private _y: number;\n\n  public constructor(x: string | number = 0, y: string | number = 0) {\n    this._x = parseFloat(`${x}`);\n    this._y = parseFloat(`${y}`);\n  }\n\n  public get x() {\n    return this._x;\n  }\n\n  public get y() {\n    return this._y;\n  }\n\n  public set x(value) {\n    this._x = value;\n  }\n\n  public set y(value) {\n    this._y = value;\n  }\n}\n\nexport default Point;\n","import { Point } from './point';\n\nexport const getMarkerPosition = (mapSize: number, p: PointInterface) => {\n  return {\n    top: `calc( 100% - ${(100 / mapSize) * p.y}% )`,\n    left: `calc( ${(100 / mapSize) * p.x}% )`\n  }\n};\n\nexport const moveBot = (direction: string = '', botLocation: PointInterface) => {\n  let x = botLocation.x;\n  let y = botLocation.y;\n\n  switch(direction) {\n    case 'N':\n      y = botLocation.y + 1;\n      break;\n    case 'E':\n      x = botLocation.x + 1;\n      break;\n    case 'S':\n      y = botLocation.y - 1;\n      break;\n    case 'W':\n      x = botLocation.x - 1;\n      break;\n  }\n\n  return new Point(x, y);\n}","import React, { FunctionComponent } from 'react';\n\nimport Grid from './Grid';\nimport Point from '../../utils/point';\nimport Marker from './Marker';\nimport { getMarkerPosition } from '../../utils/map';\n\nimport Styles from './styles/Map.module.scss'\n\n\nexport interface MapProps {\n  size: number;\n  deliveries: Delivery[];\n  botLocation: Point;\n}\n\nconst getDeliveryMarkerType = (hasBeenDelivered: boolean) => {\n  if (hasBeenDelivered) { return 'pizza'; }\n\n  return 'house';\n}\n\nconst Map: FunctionComponent<MapProps> = (props) => {\n  const { size, deliveries, botLocation } = props;\n\n  return (\n    <div className={Styles.map}>\n      <Grid size={size} />\n      {\n        deliveries.map(\n          (d, i) => {\n            const type = getDeliveryMarkerType(d.hasBeenDelivered);\n            return <Marker key={i}  type={type} position={getMarkerPosition(size, d.location)}/>\n          }\n        )\n      }\n      <Marker type=\"bot\" position={getMarkerPosition(size, botLocation)}/>\n    </div>\n  )\n}\n\nexport default Map;","import React, { FunctionComponent, FormEvent, useCallback } from 'react';\n\nimport Styles from './styles/Form.module.scss';\n\nexport interface FormProps {\n  order: string;\n  onSubmit: (e: FormEvent<HTMLFormElement>, order: string) => void\n}\n \nconst handleSubmit = (e: FormEvent<HTMLFormElement>, props: FormProps) => {\n  e.preventDefault();\n\n  const { onSubmit } = props;\n  const order = (e.target as any).elements.order.value;\n\n  onSubmit(e, order);\n}\n\nconst Form: FunctionComponent<FormProps> = (props) => {\n  const memoizedHandleSubmit = useCallback((e: FormEvent<HTMLFormElement>) => handleSubmit(e, props), []);\n\n  return (\n    <form className={Styles.form} onSubmit={memoizedHandleSubmit}>\n      <h1>Pizza ü§ñ Bot Deliveries</h1>\n      <input\n        type=\"text\"\n        id=\"order\"\n        name=\"order\" \n        required pattern=\"(\\dx\\d)(\\(\\d,\\d\\))+\" \n        placeholder={'5x5(1,3)(4,4)'}\n        title=\"Please enter a valid order with the map size and at least one set of coordinates.\"\n      />\n      <input type=\"submit\" value=\"Place Order\"/>\n    </form>\n  );\n}\n \nexport default Form;\n","import { Point } from '../utils/point';\n\nexport const INITIAL_DELIVERIES_STATE = [\n  { location: new Point(1, 2), hasBeenDelivered: true },\n  { location: new Point(2, 3), hasBeenDelivered: true },\n  { location: new Point(3, 4), hasBeenDelivered: true },\n  { location: new Point(2, 2), hasBeenDelivered: true },\n  { location: new Point(3, 2), hasBeenDelivered: true },\n  { location: new Point(4, 2), hasBeenDelivered: true },\n  { location: new Point(3.5, 3), hasBeenDelivered: true },\n];\n\nexport const BOT_STARTING_LOCATION = new Point(0, 0);\n\nexport const BOT_SPEED = 0.5 * 1000;\n\nexport const DEFAULT_MAP_SIZE = 5;","import { Point } from './point';\n\nexport const getXYDistance = (p1: Point, p2: Point) => {\n  const deltaX = p2.x - p1.x;\n  const deltaY = p2.y - p1.y;\n\n  return new Point(deltaX, deltaY);\n}\n\nexport const getCardinalDirections = (p1: Point, p2: Point) => {\n  let xDirection = 'E';\n  let yDirection = 'N';\n  let directions = '';\n\n  const distance = getXYDistance(p1, p2);\n\n  if (distance.x < 0) {\n    xDirection = 'W';\n  }\n  if (distance.y < 0) {\n    yDirection = 'S';\n  }\n\n  for (let x = 0; x < Math.abs(distance.x); x++) {\n    directions += xDirection;\n  }\n\n  for (let y = 0; y < Math.abs(distance.y); y++) {\n    directions += yDirection;\n  }\n\n  return directions;\n}\n\n","import { BOT_STARTING_LOCATION, DEFAULT_MAP_SIZE } from '../constants/index';\nimport { getCardinalDirections } from './directions';\nimport { Point } from './point';\n\nexport const removeWhiteSpaceFromOrder = (order: string) => {\n  return order.replace(/\\s/g, '');\n}\n\nexport const getMapSize = (order: string) => {\n  const size = (removeWhiteSpaceFromOrder(order)\n    .match(/\\dx\\d/) || [`${DEFAULT_MAP_SIZE}x${DEFAULT_MAP_SIZE}`])[0].split('')[0];\n\n  return parseInt(size, 10);\n}\n\nexport const getDeliveries = (order: string) => {\n  const deliveries = (removeWhiteSpaceFromOrder(order)\n    .match(/\\(\\d,\\d\\)/g) || []).map(d => new Point(d[1], d[3]));\n\n  return deliveries;\n}\n\nexport const getDeliveryInstructions = (order: string, startingPoint = BOT_STARTING_LOCATION) => {\n  const deliveries = [startingPoint, ...getDeliveries(order)];\n  let instructions = '';\n  for (let i = 0; i < deliveries.length; i++) {\n    if (i + 1 < deliveries.length) {\n      instructions += `${getCardinalDirections(deliveries[i], deliveries[i+1])}D`;\n    }\n  }\n\n  return instructions;\n};\n","import React, { Component, FormEvent } from 'react';\n\nimport Map from './components/Map';\nimport Form from './components/Form';\nimport { getDeliveries, getDeliveryInstructions, getMapSize } from './utils/deliveries';\nimport { moveBot } from './utils/map';\nimport { INITIAL_DELIVERIES_STATE, BOT_STARTING_LOCATION, DEFAULT_MAP_SIZE, BOT_SPEED } from './constants';\n\ninterface AppState {\n  order: string;\n  mapSize: number;\n  deliveryInstructions: string;\n  deliveries: Delivery[];\n  botLocation: PointInterface;\n}\n\nclass App extends Component<{}, AppState> {\n  private pizzaDeliveryInterval: number | undefined;\n\n  public state = {\n    order: '',\n    deliveryInstructions: '',\n    mapSize: DEFAULT_MAP_SIZE,\n    deliveries: INITIAL_DELIVERIES_STATE,\n    botLocation: BOT_STARTING_LOCATION\n  }\n\n  public constructor(props: any) {\n    super(props);\n    this.pizzaDeliveryInterval = undefined;\n  }\n\n  public render() {\n    const { order, mapSize, deliveries, botLocation } = this.state;\n\n    return (\n      <div className=\"App\">\n        { this.shouldShowForm && <Form order={order} onSubmit={this.handleOrder}/> }\n        <Map size={mapSize} deliveries={deliveries} botLocation={botLocation}/>\n      </div>\n    );\n  }\n\n  private reset = () => {\n    this.setState({\n      deliveries: INITIAL_DELIVERIES_STATE,\n      botLocation: BOT_STARTING_LOCATION,\n    });\n\n    window.clearInterval(this.pizzaDeliveryInterval);\n  }\n  \n  private deliverPizza = () => {\n    const { deliveryInstructions, botLocation, deliveries } = this.state;\n\n    if (!deliveryInstructions) {\n      this.reset();\n      return;\n    }\n\n    const deliveryInstructionsArray = deliveryInstructions.split('');\n    const direction = deliveryInstructionsArray.shift();\n\n    const didDeliver = direction === 'D';\n    if (didDeliver) {\n      const currentDeliveryIndex = deliveries.findIndex((d) => d.hasBeenDelivered === false);\n      deliveries[currentDeliveryIndex].hasBeenDelivered = true;\n    }\n\n    this.setState({\n      deliveryInstructions: deliveryInstructionsArray.join(''),\n      botLocation: moveBot(direction, botLocation),\n      deliveries,\n    });\n  }\n\n  private handleOrder = (e: FormEvent<HTMLFormElement>, order: string) => {\n    this.setState({\n      order,\n      mapSize: getMapSize(order),\n      deliveries: getDeliveries(order).map(d => ({ location: d, hasBeenDelivered: false })),\n      deliveryInstructions: getDeliveryInstructions(order),\n    });\n\n    this.pizzaDeliveryInterval = window.setInterval(this.deliverPizza, BOT_SPEED);\n  }\n\n  private get shouldShowForm() {\n    const { deliveryInstructions } = this.state;\n\n    return !deliveryInstructions;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}